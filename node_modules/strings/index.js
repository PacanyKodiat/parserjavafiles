function delspace(str) {
    for (var i = 0; i < str.length; i++) {
        if (str[i] == ' ') {
            str = str.substr(0, i) + str.charAt(i + 1).toUpperCase() + str.substr(i + 2);
        }
    }
    return str;
};

function str_replace(search, replace, string) {
    search = [].concat(search);
    replace = [].concat(replace);
    var len = replace.length - search.length;
    var p_last = search[search.length - 1];
    for (var i = 0; i < len; i++) {
        search.push(p_last);
    }
    for (var i = 0; i < -len; i++) {
        replace.push('');
    }
    var result = string;
    for (var i = 0; i < search.length; i++) {
        result = result.split(search[i]).join(replace[i]);
    }
    return result;
};


function removeOldCode(functionStr, numstr) {
    var indexNumber = functionStr.match(/[0-9]+/).index;
    var strDeleteAfter = '';
    for (var i = 0; i < numstr; i++) {
        strDeleteAfter += ".*\n";
    }
    var patternendfuction = new RegExp('kroku\\s' + functionStr[indexNumber] + '\.*\n' + strDeleteAfter, 'i');
    var startfunction = functionStr.match(/Exception\s{/i).index;
    var endfunction = functionStr.match(patternendfuction);
    if (startfunction && endfunction) {
        functionStr = functionStr.substring(0, startfunction + 12) + functionStr.substring(endfunction.index + endfunction[0].length);
    }
    return functionStr;
}

function addComments(functionStr, newFuncName) {
    functionStr = functionStr.replace("Exception {", "Exception {\n" + "    System.out.println(\"Start - " + newFuncName + "\");");
    functionStr = functionStr.substr(0, functionStr.length - 5) + "  System.out.println(\"End - " + newFuncName + "\");\n}";
    return functionStr;
}

function convertFuncName(FuncName) {
    var newFuncName = FuncName.slice(0, 1).toLowerCase() + FuncName.slice(1);
    newFuncName = delspace(newFuncName);
    var indextire = newFuncName.search('-');
    var strcase = newFuncName.substring(indextire + 1).match(/([0-9])+/gi)[0];
    newFuncName = newFuncName.substr(0, indextire) + '_' + strcase + '_' + newFuncName.substr(indextire + strcase.length + 1);
    newFuncName = str_replace(Config.original, Config.normalreplace, newFuncName);
    return newFuncName;
};

exports.delspace = delspace;
exports.str_replace = str_replace;
exports.convertFuncName = convertFuncName;
exports.removeOldCode = removeOldCode;
exports.addComments = addComments;

